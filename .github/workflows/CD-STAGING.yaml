name: Deploy Staging ðŸš€

on:
  push:
    branches: [ "main" ]

jobs:
  deploy-staging:
    name: Deploy to staging server
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}

      - name: Execute deployment command
        uses: appleboy/ssh-action@v1.0.3
        env:
          APP_STG_PATH: ${{ vars.APP_STG_PATH }}
          GIT_URL: ${{ secrets.GIT_URL }}
          MINIO_STG_ENDPOINT: ${{ secrets.MINIO_STG_ENDPOINT }}
          MINIO_STG_ACCESS_KEY: ${{ secrets.MINIO_STG_ACCESS_KEY }}
          MINIO_STG_SECRET_KEY: ${{ secrets.MINIO_STG_SECRET_KEY }}
          APP_STG_PORT_1: ${{ secrets.APP_STG_PORT_1 }}
          APP_STG_PORT_2: ${{ secrets.APP_STG_PORT_2 }}
          STG_URL: ${{ secrets.STG_URL }}
         
        with:
          host: ${{ secrets.SSH_HOST_STAGING }}
          username: ${{ secrets.SSH_USER_NAME_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          envs: APP_STG_PATH, GIT_URL, MINIO_STG_ENDPOINT, MINIO_STG_ACCESS_KEY, MINIO_STG_SECRET_KEY, APP_STG_PORT_1, APP_STG_PORT_2, STG_URL
          script: |

            if [[ -d "${APP_STG_PATH}" ]]; then 
              cd ${APP_STG_PATH}
              sudo docker compose down
              git add .
              git commit -m "Save local changes"
              git pull origin main
            else
              ssh-keyscan github.com > ~/.ssh/known_hosts
              git clone $GIT_URL ${APP_STG_PATH}
              cd ${APP_STG_PATH}
            fi

            # If there are any envars update
            echo "APP_STG_PORT_1=${APP_STG_PORT_1}" > .env
            echo "APP_STG_PORT_2=${APP_STG_PORT_2}" >> .env
            echo "MINIO_STG_ENDPOINT=${MINIO_STG_ENDPOINT}" >> .env
            echo "MINIO_STG_ACCESS_KEY=${MINIO_STG_ACCESS_KEY}" >> .env
            echo "MINIO_STG_SECRET_KEY=${MINIO_STG_SECRET_KEY}" >> .env

            # Create DH param if not exist
            mkdir -p ./nginx/dhparam
            if [ ! -f ./nginx/dhparam/dhparam.pem ]; then
              openssl dhparam -out ./nginx/dhparam/dhparam.pem 2048
            fi

            # Create self-signed certificate if not exist
            mkdir -p ./nginx/certs
            if [ ! -f ./nginx/certs/staging.crt ] || [ ! -f ./nginx/certs/staging.key ]; then
              openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ./nginx/certs/staging.key -out ./nginx/certs/staging.crt -subj "/CN=stg.pac-app.online/O=MyCompany/C=US"
            fi

            # Run all services
            sudo docker compose up --build --detach pacmusic-stg-1 pacmusic-stg-2 nginx-staging

      - name: Hit Endpoint
        run: |
          sleep 20
          curl -k https://${{ secrets.STG_URL }}
