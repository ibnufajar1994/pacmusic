name: Deploy Staging ðŸš€

on:
  push:
    branches: [ "main" ]

jobs:
  deploy-staging:
    name: Deploy to staging server
    environment: staging
    runs-on: ubuntu-latest

    steps:
      - name: Execute deployment command
        uses: appleboy/ssh-action@v1.0.3
        env:
          APP_STG_PATH: ${{ vars.APP_STG_PATH }}
          GIT_URL: ${{ secrets.GIT_URL }}
          APP_STG_PORT: ${{ secrets.APP_STG_PORT}}
          APP_STG_PORT_1: ${{ secrets.APP_STG_PORT_1}}
          APP_STG_PORT_2: ${{ secrets.APP_STG_PORT_2}}
          MINIO_STG_ENDPOINT: ${{ secrets.MINIO_STG_ENDPOINT}}
          MINIO_STG_ACCESS_KEY: ${{ secrets.MINIO_STG_ACCESS_KEY}}
          MINIO_STG_SECRET_KEY: ${{ secrets.MINIO_STG_SECRET_KEY}}

        with:
          host: ${{ secrets.SSH_HOST_STAGING }}
          username: ${{ secrets.SSH_USER_NAME_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          envs: APP_STG_PATH, GIT_URL, APP_STG_PORT, APP_STG_PORT_1, APP_STG_PORT_2, MINIO_STG_ENDPOINT, MINIO_STG_ACCESS_KEY, MINIO_STG_SECRET_KEY
          script: |

            if [[ -d "${APP_STG_PATH}" ]]; then 
              cd $APP_STG_PATH
              sudo docker compose down pacmusic-stg-1 pacmusic-stg-2 nginx certbot
              git pull origin main
            else
              ssh-keyscan github.com > ~/.ssh/known_hosts
              git clone $GIT_URL $APP_STG_PATH
              cd $APP_STG_PATH
            fi

            # If there are any envars update
            echo "APP_STG_PORT=${{ secrets.APP_STG_PORT }}" > .env
            echo "APP_STG_PORT_1=${{ secrets.APP_STG_PORT_1 }}" >> .env
            echo "APP_STG_PORT_2=${{ secrets.APP_STG_PORT_2 }}" >> .env
            echo "MINIO_STG_ENDPOINT=${{ secrets.MINIO_STG_ENDPOINT }}" >> .env
            echo "MINIO_STG_ACCESS_KEY=${{ secrets.MINIO_STG_ACCESS_KEY }}" >> .env
            echo "MINIO_STG_SECRET_KEY=${{ secrets.MINIO_STG_SECRET_KEY }}" >> .env

            # Ensure nginx and certbot directories exist
            sudo mkdir -p /var/www/certbot

            # Run app
            sudo docker compose up --build --detach pacmusic-stg-1 pacmusic-stg-2 nginx certbot

            # Obtain SSL certificates
            sudo certbot --nginx -d "stg.pac-app.online"    
            
            # Create symbolic links for Nginx configuration
            sudo ln -sf /etc/nginx/sites-available/stg.pac-app.online /etc/nginx/sites-enabled/
            sudo ln -sf /etc/nginx/sites-available/pac-app.online /etc/nginx/sites-enabled/

            # Restart nginx to load new certificates
            sudo docker restart nginx

      - name: Hit Endpoint
        run: |
          sleep 20
          curl https://stg.pac-app.online
