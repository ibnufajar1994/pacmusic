name: Deploy Staging ðŸš€

on:
  push:
    branches: [ "main" ]

jobs:
  deploy-staging:
    name: Deploy to staging server
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Execute deployment command
        uses: appleboy/ssh-action@v1.0.3
        env:
          APP_STG_PATH: ${{ vars.APP_STG_PATH }}
          GIT_URL: ${{ secrets.GIT_URL }}
          MINIO_STG_ENDPOINT: ${{ secrets.MINIO_STG_ENDPOINT }}
          MINIO_STG_ACCESS_KEY: ${{ secrets.MINIO_STG_ACCESS_KEY }}
          MINIO_STG_SECRET_KEY: ${{ secrets.MINIO_STG_SECRET_KEY }}
          APP_STG_PORT_1: ${{ secrets.APP_STG_PORT_1 }}
          APP_STG_PORT_2: ${{ secrets.APP_STG_PORT_2 }}
         
        with:
          host: ${{ secrets.SSH_HOST_STAGING }}
          username: ${{ secrets.SSH_USER_NAME_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          envs: APP_STG_PATH, GIT_URL, MINIO_STG_ENDPOINT, MINIO_STG_ACCESS_KEY, MINIO_STG_SECRET_KEY, APP_STG_PORT_1, APP_STG_PORT_2
          script: |
            if [[ -d "${APP_STG_PATH}" ]]; then 
              cd ${APP_STG_PATH}
              sudo docker compose down
              git pull origin main
            else
              ssh-keyscan github.com > ~/.ssh/known_hosts
              git clone $GIT_URL ${APP_STG_PATH}
              cd ${APP_STG_PATH}
            fi

            # If there are any envars update
            echo "APP_STG_PORT_1=${APP_STG_PORT_1}" > .env
            echo "APP_STG_PORT_2=${APP_STG_PORT_2}" >> .env
            echo "MINIO_STG_ENDPOINT=${MINIO_STG_ENDPOINT}" >> .env
            echo "MINIO_STG_ACCESS_KEY=${MINIO_STG_ACCESS_KEY}" >> .env
            echo "MINIO_STG_SECRET_KEY=${MINIO_STG_SECRET_KEY}" >> .env

            # Generate DH param if not exists
            if [ ! -f ./nginx/ssl/dhparam.pem ]; then
              sudo mkdir -p ./nginx/ssl
              sudo openssl dhparam -out ./nginx/ssl/dhparam.pem 2048
            fi

            # Run app
            sudo docker compose up pacmusic-stg-1 pacmusic-stg-2 nginx certbot --build --detach
      
      - name: Hit Endpoint
        run: |
          sleep 20
          curl ${{ secrets.STG_URL }}