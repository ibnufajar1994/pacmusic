version: '3'

services:
  # Nginx for Staging
  nginx-staging:
    image: nginx:latest
    container_name: nginx-staging
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/staging.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/dhparam:/etc/nginx/dhparam
    depends_on:
      - pacmusic-stg-1
      - pacmusic-stg-2
    networks:
      - pacmusic-network

  # Nginx for Production
  nginx-production:
    image: nginx:latest
    container_name: nginx-production
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/production.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/dhparam:/etc/nginx/dhparam
    depends_on:
      - pacmusic-prod-1
      - pacmusic-prod-2
    networks:
      - pacmusic-network

  # Existing services...

  pacmusic-dev:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: pacmusic-dev
    environment:
      MINIO_ENDPOINT: ${MINIO_DEV_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_DEV_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_DEV_SECRET_KEY}
    ports:
      - 5000:5000
    networks:
      - pacmusic-network

  pacmusic-stg-1:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: pacmusic-stg-1
    environment:
      MINIO_ENDPOINT: ${MINIO_STG_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_STG_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_STG_SECRET_KEY}
    ports:
      - ${APP_STG_PORT_1}:5000
    networks:
      - pacmusic-network

  pacmusic-stg-2:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: pacmusic-stg-2
    environment:
      MINIO_ENDPOINT: ${MINIO_STG_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_STG_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_STG_SECRET_KEY}
    ports:
      - ${APP_STG_PORT_2}:5000
    networks:
      - pacmusic-network
      

  pacmusic-prod-1:
    image: "${APP_IMAGE}:${APP_TAG}"
    container_name: pacmusic-prod-1
    environment:
      MINIO_ENDPOINT: ${MINIO_PROD_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_PROD_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_PROD_SECRET_KEY}
    ports:
      - ${APP_PROD_PORT_1}:5000
    networks:
      - pacmusic-network


  pacmusic-prod-2:
    image: "${APP_IMAGE}:${APP_TAG}"
    container_name: pacmusic-prod-2
    environment:
      MINIO_ENDPOINT: ${MINIO_PROD_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_PROD_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_PROD_SECRET_KEY}
    ports:
      - ${APP_PROD_PORT_2}:5000
    networks:
      - pacmusic-network

  # NGINX Reverse Proxy & Load Balancing

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/staging.conf:/etc/nginx/conf.d/staging.conf:ro
      - ./nginx/production.conf:/etc/nginx/conf.d/production.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - pacmusic-stg-1
      - pacmusic-stg-2
      - pacmusic-prod-1
      - pacmusic-prod-2
    networks:
      - pacmusic-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email shootbyrealme@gmail.com -d pac-app.online -d stg.pac-app.online --agree-tos --no-eff-email


networks:
  pacmusic-network:
    driver: bridge
    name: pacmusic-network

volumes:
  minio-dev-vol:
    driver: local
    name: minio-dev-vol
